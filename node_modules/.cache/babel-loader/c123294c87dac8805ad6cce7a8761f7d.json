{"ast":null,"code":"var _jsxFileName = \"/home/fernando/Escritorio/portfolio heroku/portfolio/src/components/SwitchIdioma.jsx\";\nimport React, { useEffect } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Switch from '@material-ui/core/Switch';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nconst AntSwitch = withStyles(theme => ({\n  root: {\n    width: 28,\n    height: 16,\n    padding: 0,\n    display: 'flex'\n  },\n  switchBase: {\n    padding: 2,\n    color: theme.palette.grey[500],\n    '&$checked': {\n      transform: 'translateX(12px)',\n      color: theme.palette.common.white,\n      '& + $track': {\n        opacity: 1,\n        backgroundColor: theme.palette.primary.main,\n        borderColor: theme.palette.primary.main\n      }\n    }\n  },\n  thumb: {\n    width: 12,\n    height: 12,\n    boxShadow: 'none'\n  },\n  track: {\n    border: `1px solid ${theme.palette.grey[500]}`,\n    borderRadius: 16 / 2,\n    opacity: 1,\n    backgroundColor: theme.palette.common.white\n  },\n  checked: {}\n}))(Switch);\nexport default function CustomizedSwitches() {\n  const [ingles, setIngles] = React.useState(true);\n  useEffect(() => {\n    const userLang = navigator.language || navigator.userLanguage;\n    let defaultLocale = userLang.substring(0, 2);\n    let langSave = localStorage.getItem(\"lang\");\n\n    if (langSave) {\n      defaultLocale = langSave;\n    }\n\n    switch (defaultLocale) {\n      case \"es\":\n        setIngles(false);\n        break;\n\n      case \"en\":\n        setIngles(true);\n        break;\n    }\n\n    console.log(ingles);\n  }, []);\n\n  const handleChange = event => {\n    setIngles(event.target.checked);\n\n    if (event.target.checked) {\n      localStorage.setItem(\"lang\", \"en\");\n      window.location.href = window.location.href.replace('/es', '/en');\n    } else {\n      localStorage.setItem(\"lang\", \"es\");\n      window.location.href = window.location.href.replace('/en', '/es');\n    }\n  };\n\n  return (\n    /*#__PURE__*/\n    // <FormGroup >\n    //     <Typography component=\"div\">\n    React.createElement(Grid, {\n      component: \"label\",\n      container: true,\n      justify: \"center\",\n      alignItems: \"center\",\n      spacing: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }\n    }, \"Espa\\xF1ol\"), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(AntSwitch, {\n      checked: ingles,\n      onChange: handleChange,\n      name: \"checkedC\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }\n    }, \"Ingl\\xE9s\")) //    </Typography>\n    // </FormGroup> \n\n  );\n}","map":{"version":3,"sources":["/home/fernando/Escritorio/portfolio heroku/portfolio/src/components/SwitchIdioma.jsx"],"names":["React","useEffect","withStyles","FormGroup","Switch","Grid","Typography","AntSwitch","theme","root","width","height","padding","display","switchBase","color","palette","grey","transform","common","white","opacity","backgroundColor","primary","main","borderColor","thumb","boxShadow","track","border","borderRadius","checked","CustomizedSwitches","ingles","setIngles","useState","userLang","navigator","language","userLanguage","defaultLocale","substring","langSave","localStorage","getItem","console","log","handleChange","event","target","setItem","window","location","href","replace"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\nconst AntSwitch = withStyles((theme) => ({\r\n    root: {\r\n        width: 28,\r\n        height: 16,\r\n        padding: 0,\r\n        display: 'flex',\r\n    },\r\n    switchBase: {\r\n        padding: 2,\r\n        color: theme.palette.grey[500],\r\n        '&$checked': {\r\n            transform: 'translateX(12px)',\r\n            color: theme.palette.common.white,\r\n            '& + $track': {\r\n                opacity: 1,\r\n                backgroundColor: theme.palette.primary.main,\r\n                borderColor: theme.palette.primary.main,\r\n            },\r\n        },\r\n    },\r\n    thumb: {\r\n        width: 12,\r\n        height: 12,\r\n        boxShadow: 'none',\r\n    },\r\n    track: {\r\n        border: `1px solid ${theme.palette.grey[500]}`,\r\n        borderRadius: 16 / 2,\r\n        opacity: 1,\r\n        backgroundColor: theme.palette.common.white,\r\n    },\r\n    checked: {},\r\n}))(Switch);\r\n\r\nexport default function CustomizedSwitches() {\r\n    const [ingles, setIngles] = React.useState(true);\r\n\r\n    useEffect(() => {\r\n        const userLang = navigator.language || navigator.userLanguage;\r\n        let defaultLocale = userLang.substring(0, 2);\r\n\r\n        let langSave = localStorage.getItem(\"lang\");\r\n        if (langSave) {\r\n            defaultLocale = langSave;\r\n        }\r\n\r\n        switch (defaultLocale) {\r\n            case \"es\": setIngles(false); break;\r\n            case \"en\": setIngles(true); break;\r\n        }\r\n        console.log(ingles)\r\n    }, [])\r\n\r\n\r\n    const handleChange = (event) => {\r\n        setIngles(event.target.checked);\r\n        if (event.target.checked) {\r\n            localStorage.setItem(\"lang\", \"en\");\r\n            window.location.href= window.location.href.replace('/es','/en')\r\n        } else {\r\n            localStorage.setItem(\"lang\", \"es\");\r\n            window.location.href= window.location.href.replace('/en','/es')\r\n        }\r\n    };\r\n\r\n    return (\r\n        // <FormGroup >\r\n        //     <Typography component=\"div\">\r\n                <Grid component=\"label\" container justify=\"center\" alignItems=\"center\" spacing={1}>\r\n                    <Grid item>Español</Grid>\r\n                    <Grid item>\r\n                        <AntSwitch checked={ingles} onChange={handleChange} name=\"checkedC\" />\r\n                    </Grid>\r\n                    <Grid item>Inglés</Grid>\r\n                </Grid>\r\n        //    </Typography>\r\n        // </FormGroup> \r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}