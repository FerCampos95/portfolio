{"ast":null,"code":"var _jsxFileName = \"/home/fernando/Escritorio/Backups windows/Desa/portfolio heroku/portfolio/src/components/Proyectos.jsx\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport CardProyecto from './CardProyecto';\nimport { Grid, Typography } from '@material-ui/core';\nimport { useTranslation } from 'react-i18next';\nimport screenNotas from '../images/proyectos/notas.png';\nimport screenChat from '../images/proyectos/chat.png';\nimport screenTutti from '../images/proyectos/tuttifrutti.png';\nimport screenCheckout from '../images/proyectos/checkout.png';\nimport screenMaterias from '../images/proyectos/chat.png';\nimport screenPortfolio from '../images/proyectos/tuttifrutti.png';\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    padding: theme.spacing(2)\n  },\n  titulo: {\n    backgroundColor: theme.palette.text.primary,\n    color: 'white',\n    borderRadius: '30px'\n  },\n  cards: {\n    display: 'flex',\n    // margin: theme.spacing(3),\n    justifyContent: 'space-between'\n  }\n}));\nexport const Proyectos = () => {\n  const classes = useStyles();\n  const {\n    t\n  } = useTranslation();\n  const html = [{\n    titulo: t('projects.notes'),\n    descripcion: t('projects.notes-desc'),\n    git: 'https://google.com',\n    demo: 'https://google.com',\n    imagen: screenNotas\n  }];\n  const node = [{\n    titulo: t('projects.chat'),\n    descripcion: t('projects.chat-desc'),\n    git: 'https://google.com',\n    demo: 'https://google.com',\n    imagen: screenChat\n  }, {\n    titulo: t('projects.tutti'),\n    descripcion: t('projects.tutti-desc'),\n    git: 'https://google.com',\n    demo: 'https://google.com',\n    imagen: screenTutti\n  }, {\n    titulo: t('projects.mp'),\n    descripcion: t('projects.mp-desc'),\n    git: 'https://google.com',\n    demo: 'https://google.com',\n    imagen: screenCheckout\n  }];\n  const react = [{\n    titulo: t('projects.subjects'),\n    descripcion: t('projects.subjects-desc'),\n    git: 'https://google.com',\n    demo: 'https://google.com',\n    imagen: screenMaterias\n  }, {\n    titulo: t('projects.portfolio'),\n    descripcion: t('projects.portfolio-desc'),\n    git: 'https://google.com',\n    demo: 'https://google.com',\n    imagen: screenPortfolio\n  }];\n  return /*#__PURE__*/React.createElement(Paper, {\n    elevation: 3,\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    className: classes.titulo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h4\",\n    color: \"initial\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 21\n    }\n  }, \"HTML/CSS\")), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    xs: 12,\n    className: classes.cards,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }, html.map(proyecto => {\n    return /*#__PURE__*/React.createElement(CardProyecto, {\n      imagen: proyecto.imagen,\n      titulo: proyecto.titulo,\n      descripcion: proyecto.descripcion,\n      git: proyecto.git,\n      demo: proyecto.demo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 33\n      }\n    });\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    className: classes.titulo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h4\",\n    color: \"initial\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 21\n    }\n  }, \"Node\")), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    xs: 12,\n    className: classes.cards,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }\n  }, node.map(proyecto => {\n    return /*#__PURE__*/React.createElement(CardProyecto, {\n      imagen: proyecto.imagen,\n      titulo: proyecto.titulo,\n      descripcion: proyecto.descripcion,\n      git: proyecto.git,\n      demo: proyecto.demo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 33\n      }\n    });\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    className: classes.titulo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h4\",\n    color: \"initial\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 21\n    }\n  }, \"React\")), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    xs: 12,\n    className: classes.cards,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 17\n    }\n  }, react.map(proyecto => {\n    return /*#__PURE__*/React.createElement(CardProyecto, {\n      imagen: proyecto.imagen,\n      titulo: proyecto.titulo,\n      descripcion: proyecto.descripcion,\n      git: proyecto.git,\n      demo: proyecto.demo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 33\n      }\n    });\n  }))));\n};","map":{"version":3,"sources":["/home/fernando/Escritorio/Backups windows/Desa/portfolio heroku/portfolio/src/components/Proyectos.jsx"],"names":["React","makeStyles","Paper","CardProyecto","Grid","Typography","useTranslation","screenNotas","screenChat","screenTutti","screenCheckout","screenMaterias","screenPortfolio","useStyles","theme","paper","marginLeft","spacing","marginRight","padding","titulo","backgroundColor","palette","text","primary","color","borderRadius","cards","display","justifyContent","Proyectos","classes","t","html","descripcion","git","demo","imagen","node","react","map","proyecto"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport CardProyecto from './CardProyecto';\r\nimport { Grid, Typography } from '@material-ui/core';\r\nimport  {useTranslation} from 'react-i18next';\r\n\r\nimport screenNotas  from '../images/proyectos/notas.png';\r\nimport screenChat   from '../images/proyectos/chat.png';\r\nimport screenTutti from '../images/proyectos/tuttifrutti.png'\r\nimport screenCheckout from '../images/proyectos/checkout.png'\r\nimport screenMaterias from '../images/proyectos/chat.png'\r\nimport screenPortfolio from '../images/proyectos/tuttifrutti.png'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginLeft: theme.spacing(2),\r\n        marginRight: theme.spacing(2),\r\n        padding: theme.spacing(2),\r\n    },\r\n    titulo: {\r\n        backgroundColor: theme.palette.text.primary,\r\n        color: 'white',\r\n        borderRadius: '30px',\r\n    },\r\n    cards: {\r\n        display: 'flex',\r\n        // margin: theme.spacing(3),\r\n        justifyContent: 'space-between',\r\n    },\r\n}));\r\n\r\n\r\n\r\nexport const Proyectos = () => {\r\n    const classes = useStyles();\r\n    const {t} = useTranslation();\r\n    const html = [\r\n        {\r\n            titulo: t('projects.notes'),\r\n            descripcion: t('projects.notes-desc'),\r\n            git: 'https://google.com',\r\n            demo: 'https://google.com',\r\n            imagen: screenNotas,\r\n        },\r\n    ]\r\n    \r\n    const node = [\r\n        {\r\n            titulo: t('projects.chat'),\r\n            descripcion: t('projects.chat-desc'),\r\n            git: 'https://google.com',\r\n            demo: 'https://google.com',\r\n            imagen: screenChat,\r\n        },\r\n        {\r\n            titulo: t('projects.tutti'),\r\n            descripcion: t('projects.tutti-desc'),\r\n            git: 'https://google.com',\r\n            demo: 'https://google.com',\r\n            imagen: screenTutti,\r\n        },\r\n        {\r\n            titulo: t('projects.mp'),\r\n            descripcion: t('projects.mp-desc'),\r\n            git: 'https://google.com',\r\n            demo: 'https://google.com',\r\n            imagen: screenCheckout,\r\n            \r\n        },\r\n    ]\r\n    \r\n    const react = [\r\n        {\r\n            titulo: t('projects.subjects'),\r\n            descripcion: t('projects.subjects-desc'),\r\n            git: 'https://google.com',\r\n            demo: 'https://google.com',\r\n            imagen: screenMaterias,\r\n            \r\n        },\r\n        {\r\n            titulo: t('projects.portfolio'),\r\n            descripcion: t('projects.portfolio-desc'),\r\n            git: 'https://google.com',\r\n            demo: 'https://google.com',\r\n            imagen: screenPortfolio,\r\n        },\r\n    \r\n    ]\r\n    \r\n    return (\r\n        <Paper elevation={3} className={classes.paper}>\r\n            <Grid container>\r\n                <Grid item xs={12} className={classes.titulo}>\r\n                    <Typography variant=\"h4\" color=\"initial\" align=\"center\">HTML/CSS</Typography>\r\n                </Grid>\r\n                <Grid container xs={12} className={classes.cards}>\r\n                    {\r\n                        html.map(proyecto => {\r\n                            return (\r\n                                <CardProyecto\r\n                                    imagen={proyecto.imagen}\r\n                                    titulo={proyecto.titulo}\r\n                                    descripcion={proyecto.descripcion}\r\n                                    git={proyecto.git}\r\n                                    demo={proyecto.demo}\r\n                                ></CardProyecto>\r\n                            )\r\n\r\n                        })\r\n                    }\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <Grid container>\r\n                <Grid item xs={12} className={classes.titulo}>\r\n                    <Typography variant=\"h4\" color=\"initial\" align=\"center\">Node</Typography>\r\n                </Grid>\r\n                <Grid container xs={12} className={classes.cards}>\r\n                    {\r\n                        node.map(proyecto => {\r\n                            return (\r\n                                <CardProyecto\r\n                                    imagen={proyecto.imagen}\r\n                                    titulo={proyecto.titulo}\r\n                                    descripcion={proyecto.descripcion}\r\n                                    git={proyecto.git}\r\n                                    demo={proyecto.demo}\r\n                                ></CardProyecto>\r\n                            )\r\n\r\n                        })\r\n                    }\r\n                </Grid>\r\n            </Grid>\r\n\r\n            <Grid container>\r\n                <Grid item xs={12} className={classes.titulo}>\r\n                    <Typography variant=\"h4\" color=\"initial\" align=\"center\">React</Typography>\r\n                </Grid>\r\n                <Grid container xs={12} className={classes.cards}>\r\n                    {\r\n                        react.map(proyecto => {\r\n                            return (\r\n                                <CardProyecto\r\n                                    imagen={proyecto.imagen}\r\n                                    titulo={proyecto.titulo}\r\n                                    descripcion={proyecto.descripcion}\r\n                                    git={proyecto.git}\r\n                                    demo={proyecto.demo}\r\n                                ></CardProyecto>\r\n                            )\r\n\r\n                        })\r\n                    }\r\n                </Grid>\r\n            </Grid>\r\n        </Paper>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}